# .github/workflows/deploy-windows.yml
name: Deploy to self-hosted Windows

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: [self-hosted, Windows]

    # set env for all steps (adjust Mailjet secrets only if you want real email)
    env:
      MONITOR_LOG: C:\monitoring\app\server_monitoring.log
      # MAILJET_API_KEY: ${{ secrets.MJ_API_KEY }}
      # MAILJET_API_SECRET: ${{ secrets.MJ_API_SECRET }}
      # MAIL_FROM: you@example.com
      # MAIL_TO: you@example.com

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Sync repo to C:\monitoring\app
        shell: 'powershell -NoProfile -ExecutionPolicy Bypass -File {0}'
        run: |
          $dest = 'C:\monitoring\app'
          if (!(Test-Path $dest)) { New-Item -ItemType Directory -Path $dest | Out-Null }
          robocopy $PWD $dest /MIR /XD .git .github __pycache__ tests .venv
          $code = $LASTEXITCODE; if ($code -le 7) { exit 0 } else { exit $code }

      - name: Ensure venv + install deps
        shell: 'powershell -NoProfile -ExecutionPolicy Bypass -File {0}'
        run: |
          $venv = 'C:\monitoring\app\.venv'
          if (!(Test-Path $venv)) { python -m venv $venv }
          & $venv\Scripts\python.exe -m pip install -U pip
          if (Test-Path 'C:\monitoring\app\requirements.txt') {
            & $venv\Scripts\pip.exe install -r C:\monitoring\app\requirements.txt
          }

      - name: Test run monitoring (no email)
        shell: 'powershell -NoProfile -ExecutionPolicy Bypass -File {0}'
        run: |
          Set-Location C:\monitoring\app
          & .\.venv\Scripts\python.exe .\monitoring1.py all --one-email -p C:\

      # Optional: show where we wrote the log
      - name: Tail log
        shell: 'powershell -NoProfile -ExecutionPolicy Bypass -File {0}'
        run: |
          Write-Host "MONITOR_LOG = $env:MONITOR_LOG"
          if (Test-Path $env:MONITOR_LOG) {
            Get-Content $env:MONITOR_LOG -Tail 40
          } else {
            Write-Host "Log not found."
          }

      # Optional: collect the log as an artifact for easy viewing
      - name: Upload log artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: server_monitoring-log
          path: C:\monitoring\app\server_monitoring.log
          if-no-files-found: warn
